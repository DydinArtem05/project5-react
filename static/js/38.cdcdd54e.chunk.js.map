{"version":3,"file":"static/js/38.cdcdd54e.chunk.js","mappings":"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","sources":["Login/LoginPage/LoginPage.jsx","webpack://social-network/./src/assets/RenderField/renderField.module.css?a540","assets/RenderField/renderField.js","assets/validators/validators.js"],"sourcesContent":["import React from \"react\";\r\nimport design from '../Login.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { loginAccount } from \"../../redux/login-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { Input } from \"../../assets/RenderField/renderField\";\r\nimport { required } from \"../../assets/validators/validators\";\r\nimport { getIsAuth } from \"../../redux/login-selectors\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet LoginForm = (props) => {\r\n\r\n    return <form onSubmit={props.handleSubmit} className={design.login}>\r\n        <div className={design.email}>\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <Field name=\"email\" component={Input} type=\"email\" validate={required} />\r\n        </div>\r\n        <div className={design.password}>\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <Field name=\"password\" component={Input} type=\"password\" validate={required} />\r\n        </div>\r\n        <div className={design.remember}>\r\n            <Field name=\"rememberMe\" component={Input} type=\"checkbox\" />\r\n            <label htmlFor=\"rememberMe\">Remember me</label>\r\n        </div>\r\n        {props.captcha.length > 1 ? <div className={design.captcha}>\r\n            <img src={props.captcha} alt=\"captcha\" />\r\n            <Field name=\"captcha\" component={Input} type=\"text\" validate={required} />\r\n        </div> : ''}\r\n        {props.errorMessage.length > 1\r\n            ? <div className={design.errorMessage}><p>{props.errorMessage}</p></div> : ''}\r\n        <div className={design.sendButton__block}>\r\n            <button type=\"submit\" className={design.sendButton}>Sign in</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nLoginForm = reduxForm({\r\n    form: 'Sign in'\r\n})(LoginForm);\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n    onSubmit = (formData) => {\r\n        this.props.loginAccount(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    render() {\r\n        if(this.props.isAuth){\r\n            return <Navigate to=\"/profile\" />\r\n        }\r\n        return (\r\n            <LoginForm onSubmit={this.onSubmit} captcha={this.props.captcha} errorMessage={this.props.errorMessage} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        captcha: state.authUser.captcha,\r\n        isAuth: getIsAuth(state),\r\n        errorMessage: state.authUser.errorMessage\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { loginAccount })(Login)\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"renderField_field__iAWES\",\"errorField\":\"renderField_errorField__ZT+-d\",\"errorText\":\"renderField_errorText__gsmbN\"};","import design from './renderField.module.css'\r\n\r\nconst RenderField = ({ input, meta: { error, touched }, ...props }) => {\r\n    const hasError = error && touched\r\n    return (\r\n        <>\r\n            {props.children}\r\n            {hasError && <div className={design.errorText}>\r\n                {error}\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, ...restProps } = props;\r\n    return <RenderField {...props}><textarea {...input} {...restProps} /></RenderField>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, ...restProps } = props;\r\n    return <RenderField {...props}><input {...input} {...restProps} /></RenderField>\r\n}","export const maxLengthField = (maxLength) => (value) => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined\r\n}\r\n\r\nexport const required = (value) => {\r\n    if(!value) return 'This field is required';\r\n    return undefined\r\n}"],"names":["LoginForm","props","_jsxs","onSubmit","handleSubmit","className","design","children","_jsx","htmlFor","Field","name","component","Input","type","validate","required","captcha","length","src","alt","errorMessage","reduxForm","form","Login","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","concat","formData","loginAccount","email","password","rememberMe","_createClass","key","value","this","isAuth","Navigate","to","React","connect","state","authUser","getIsAuth","RenderField","_ref","input","_ref$meta","meta","error","touched","_objectWithoutProperties","_excluded","hasError","_Fragment","Textarea","restProps","_excluded2","_objectSpread","_excluded3","maxLengthField","maxLength"],"sourceRoot":""}