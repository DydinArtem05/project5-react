{"version":3,"file":"static/js/158.030fcc32.chunk.js","mappings":"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","sources":["webpack://social-network/./src/Dialogs/Dialogs.module.css?4a91","Dialogs/Chat/ChatHistory/ChatHistory.jsx","Dialogs/Chat/TypeMessage/TypeMessage.jsx","Dialogs/Chat/TypeMessage/TypeMessageContainer.jsx","Dialogs/Chat/Chat.jsx","Dialogs/Senders/Senders.jsx","Dialogs/Dialogs.jsx","redux/dialogs-selector.js","Dialogs/DialogsContainer.jsx","webpack://social-network/./src/assets/RenderField/renderField.module.css?a540","assets/RenderField/renderField.js","assets/validators/validators.js","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__l136p\",\"chat\":\"Dialogs_chat__bv-hM\",\"senders_block\":\"Dialogs_senders_block__m7rhK\",\"chat_history\":\"Dialogs_chat_history__bEbSB\",\"chat_history__owner\":\"Dialogs_chat_history__owner__V6Dm+\",\"chat_history__interlocutor\":\"Dialogs_chat_history__interlocutor__mI-1D\",\"type_message\":\"Dialogs_type_message__pAFXW\"};","import React from \"react\";\r\nimport cn from 'classnames';\r\nimport design from \"../../Dialogs.module.css\";\r\n\r\nclass ChatHistory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let targetChat = this.props.chatHistory.filter(chat => chat.name === this.props.currentChatPerson)\r\n        return (\r\n            <div className={cn(design.chat_history)}>\r\n                {targetChat[0].content.map((message, i) => \r\n                    <div className={cn(\r\n                        {\r\n                            [design.chat_history__owner]:\r\n                            message.senderMessageId === 0\r\n                        },\r\n                        {\r\n                            [design.chat_history__interlocutor]:\r\n                            message.senderMessageId === 1 || \r\n                            message.senderMessageId === 2 ||\r\n                            message.senderMessageId === 3\r\n                        })}\r\n                        key={i}>\r\n                        {message.historyChatMessage}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ChatHistory;","import React from \"react\";\r\nimport cn from 'classnames';\r\nimport design from \"../../Dialogs.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../../assets/RenderField/renderField\";\r\nimport { maxLengthField } from \"../../../assets/validators/validators\";\r\n\r\nconst maxLengthField150 = maxLengthField(150)\r\n\r\nlet TypeMessage = props => {\r\n    return (\r\n        <form className={cn(design.type_message)} onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name=\"addNewMessageField\" validate={maxLengthField150} />\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form:'addNewMessageForm'})(TypeMessage);","import React from 'react';\r\nimport TypeMessage from \"./TypeMessage\";\r\nimport { sendMessageActionCreator } from '../../../redux/dialogs-reducer';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass TypeMessageContainer extends React.Component{\r\n    onAddNewMessage = (values) => {\r\n        this.props.sendMessageActionCreator(this.props.currentChatPerson, values.addNewMessageField)\r\n    }\r\n    render(){\r\n        return(\r\n            <TypeMessage onSubmit={this.onAddNewMessage} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(null, { sendMessageActionCreator })(TypeMessageContainer);","import React from \"react\";\r\nimport cn from 'classnames';\r\nimport design from \"../Dialogs.module.css\";\r\nimport ChatHistory from \"./ChatHistory/ChatHistory\";\r\nimport TypeMessageContainer from \"./TypeMessage/TypeMessageContainer\";\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn(design.chat)}>\r\n                <ChatHistory chatHistory={this.props.chatHistory} currentChatPerson={this.props.currentChatPerson} />\r\n                <TypeMessageContainer onAddNewMessage={this.onAddNewMessage} currentChatPerson={this.props.currentChatPerson} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Chat;","import React from \"react\";\r\nimport cn from 'classnames';\r\nimport design from \"../Dialogs.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { SetCurrentChatPage } from \"../../redux/dialogs-reducer\";\r\n\r\nclass Senders extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            activeSender: 1\r\n        }\r\n    } \r\n\r\n    sendCurrentChatPerson = (e) => {\r\n        this.props.SetCurrentChatPage(e.currentTarget.innerHTML)\r\n        this.setState({\r\n            activeSender: e.currentTarget.id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={cn(design.senders_block)}>\r\n                <ul>\r\n                    {this.props.senders.map(sender =>\r\n                        <li key={sender.senderId} id={sender.senderId} style={{ backgroundColor: sender.senderId == this.state.activeSender ? \"aliceblue\" : \"#fff\"}} onClick={this.sendCurrentChatPerson}>{sender.senderName}</li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect(null, {SetCurrentChatPage})(Senders);","import React from \"react\";\r\nimport cn from 'classnames';\r\nimport design from \"./Dialogs.module.css\";\r\nimport Chat from \"./Chat/Chat\";\r\nimport Senders from \"./Senders/Senders\";\r\n\r\nclass Dialogs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={cn(design.dialogs)}>\r\n                <Senders senders={this.props.senders} />\r\n                <Chat chatHistory={this.props.chatHistory}\r\n                currentChatPerson={this.props.currentChatPerson} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Dialogs;","export const getChatHistory = (state) => {\r\n    return state.messagePage.chatHistory\r\n}\r\n\r\nexport const getSenders = (state) => {\r\n    return state.messagePage.senders\r\n}\r\n\r\nexport const getCurrentChatPerson = (state) => {\r\n    return state.messagePage.currentChatPerson\r\n}","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../hoc/withAuthRedirect\";\r\nimport { getChatHistory, getSenders, getCurrentChatPerson } from \"../redux/dialogs-selector\";\r\n\r\nclass DialogsContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialogs chatHistory={this.props.chatHistory}\r\n                senders={this.props.senders} currentChatPerson={this.props.currentChatPerson}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        chatHistory: getChatHistory(state),\r\n        senders: getSenders(state),\r\n        currentChatPerson: getCurrentChatPerson(state)\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps), withAuthRedirect)(DialogsContainer)","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"renderField_field__iAWES\",\"errorField\":\"renderField_errorField__ZT+-d\",\"errorText\":\"renderField_errorText__gsmbN\"};","import design from './renderField.module.css'\r\n\r\nconst RenderField = ({ input, meta: { error, touched }, ...props }) => {\r\n    const hasError = error && touched\r\n    return (\r\n        <>\r\n            {props.children}\r\n            {hasError && <div className={design.errorText}>\r\n                {error}\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, ...restProps } = props;\r\n    return <RenderField {...props}><textarea {...input} {...restProps} /></RenderField>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, ...restProps } = props;\r\n    return <RenderField {...props}><input {...input} {...restProps} /></RenderField>\r\n}","export const maxLengthField = (maxLength) => (value) => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined\r\n}\r\n\r\nexport const required = (value) => {\r\n    if(!value) return 'This field is required';\r\n    return undefined\r\n}","import { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.authUser.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to=\"/login\" />\r\n            else {\r\n                return <Component {...this.props} />\r\n            }\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}"],"names":["_React$Component","_inherits","ChatHistory","_super","_createSuper","props","_classCallCheck","call","_createClass","key","value","_this","targetChat","this","chatHistory","filter","chat","name","currentChatPerson","_jsx","className","cn","design","children","content","map","message","i","_defineProperty","senderMessageId","historyChatMessage","React","maxLengthField150","maxLengthField","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","validate","TypeMessageContainer","_len","arguments","length","args","Array","_key","apply","concat","onAddNewMessage","values","sendMessageActionCreator","addNewMessageField","TypeMessage","connect","Chat","Senders","sendCurrentChatPerson","e","SetCurrentChatPage","currentTarget","innerHTML","setState","activeSender","id","state","_this2","senders","sender","senderId","style","backgroundColor","onClick","senderName","Dialogs","getChatHistory","messagePage","getSenders","getCurrentChatPerson","DialogsContainer","compose","withAuthRedirect","RenderField","_ref","input","_ref$meta","meta","error","touched","_objectWithoutProperties","_excluded","hasError","_Fragment","restProps","_excluded2","_objectSpread","Input","_excluded3","maxLength","required","mapStateToPropsForRedirect","isAuth","authUser","Component","RedirectComponent","Navigate","to"],"sourceRoot":""}